# This is the basic standard configuration that is generated by NeoConnect
# You can generate your own configuration file at the root of your project by
# running the "bin/neo config:generate" command
neoconnect:
  connections:
    default:
      scheme: http
      host: localhost
      port: 7474
      flush_strategy:
        strategy: manual

# You can work with multiple databases, just add another connection alias and parameters
# For e.g. here is another connection definition for using a separate database to process
# statistics of your site/application
#    stats:
#      scheme: http
#      host: stats.localserver.dev
#      port: 7474
#      flush_strategy:
#        strategy: stack
#        stack_limit: 15
#
# Transaction settings. You can define the commit mode for each connection
# SHORT mode is opening & commiting the transaction in one single request
# COMPLETE mode is the whole process, opening the transaction, sending statetement & commiting the transaction
#
#  transaction:
#    commit_mode:
#      default: short
#      stats: complete
#
# Without cache, the complete api discovery processus will be done at each runtime, while this is not bad in dev env,
# it is weird to do that in production, you can cache the api endpoint urls by defining a cahce mode for the
# connections
#
#  api_discovery:
#    cache:
#      enabled: true
#      type: stream | apc
#      path: /Users/ikwattro/dev/myapp/cache
#
# Here you define the format of the result set, you can choose between pretty or json
# pretty means that the json result is deserialized into an object oriented result set
#
# You can also define the error_handling mode, by default if the result of a transaction contains errors,
# an exception will be thrown. You can choose the soft_mode, the error will be logged but you have to handle errors by
# yourself.
# for e.g. :
#         Neo::sendQuery($query, $parameters);
#         $result = Neo::flush();
#         $nodes = $result->getNodes();
#         // If you choose the soft_mode error_handling, you need to handle it by yourself :
#         // if (!$result->hasErrors()) ....
#
#  result_settings:
#    default:
#      format: pretty
#      error_handling: exception
#
#    stats:
#      format: json
#      error_handling: soft_mode
#
#
#  logger:
#    default:
#      handler: stream
#      path: /var/log/neoconnect.log
#      level: debug

#    app:
#      handler: firephp
#      level: debug

#    mylogger:
#      handler: custom
#      class: "Your\\Fully\\Classified\\ClassName"
#      level: info

#  event_subscriber:
#    alias1:
#      class: "Your\\FullyClassified\\EventSubscriber\\ClassName"
#      events:
#        - http.pre_request_send
#        - queue.pre_add_statement
#      services:
#        - neoconnect.transaction_manager
#        - neoconnect.queue_manager